[
  {
    "type": "stdout",
    "data": "="
  },
  {
    "type": "stdout",
    "data": "thread-group-added,id=\"i1\"\n~\"GNU gdb (GDB) 7.11\\n\"\n~\"Copyright (C) 2016 Free Software Foundation, Inc.\\n\"\n~\"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to th"
  },
  {
    "type": "stdout",
    "data": "e extent permitted by law.  Type \\\"show copying\\\"\\nand \\\"show warranty\\\" for details.\\n\"\n~\"This GDB was configured as \\\"x86_64-pc-linux-gnu\\\".\\nType \\\"show configuration\\\" for configuration details.\"\n~\"\\nFor bug reporting instructions, please see:\\n\"\n~\"<http://www.gnu.org/software/g"
  },
  {
    "type": "stdout",
    "data": "db/bugs/>.\\n\"\n~\"Find the GDB manual and other documentation resources online at:\\n<http://www.gnu.org/software/gdb/documentation/>.\\n\"\n~\"For help, type \\\"help\\\".\\n\"\n~\"Type \\\"apropos word\\\" to search for commands related to \\\"word\\\"...\\n\"\n"
  },
  {
    "type": "stdout",
    "data": "~\"Reading symbols from g"
  },
  {
    "type": "stdout",
    "data": "uess...\"\n"
  },
  {
    "type": "stdout",
    "data": "~\"done.\\n\"\n"
  },
  {
    "type": "stdout",
    "data": "(gdb) \n"
  },
  {
    "type": "stdin",
    "data": "-break-insert main\n"
  },
  {
    "type": "stdout",
    "data": "^done,bkpt={number=\"1\",type=\"breakpoint\",disp=\"keep\",enabled=\"y\",addr=\"0x000000000040062e\",func=\"main\",file=\"guess.c\",fullname=\"/home/alex/Projects/react-gdb/demo/examples/guess-game/guess.c\",line=\"6\",thread-groups=[\"i1\"],times=\"0\",original-location=\"main\"}\n(gdb) \n"
  },
  {
    "type": "stdin",
    "data": "-exec-run\n"
  },
  {
    "type": "stdout",
    "data": "=thread-group-started,id=\"i1\",pid=\"1606\"\n=thread-created,id=\"1\","
  },
  {
    "type": "stdout",
    "data": "group-id=\"i1\"\n"
  },
  {
    "type": "stdout",
    "data": "="
  },
  {
    "type": "stdout",
    "data": "l"
  },
  {
    "type": "stdout",
    "data": "i"
  },
  {
    "type": "stdout",
    "data": "b"
  },
  {
    "type": "stdout",
    "data": "rary-loaded,id=\"/lib64/ld-linux-x86-64.so.2\",target-name=\"/lib64/ld-linux-x86-64.so.2\",host-name=\"/lib64/ld-linux-x86-64.so.2\",symbols-loaded=\"0\",thread-group=\"i1\"\n"
  },
  {
    "type": "stdout",
    "data": "^running\n"
  },
  {
    "type": "stdout",
    "data": "*running,thread-id=\"all\"\n"
  },
  {
    "type": "stdout",
    "data": "(gdb) \n"
  },
  {
    "type": "stdout",
    "data": "="
  },
  {
    "type": "stdout",
    "data": "l"
  },
  {
    "type": "stdout",
    "data": "i"
  },
  {
    "type": "stdout",
    "data": "b"
  },
  {
    "type": "stdout",
    "data": "r"
  },
  {
    "type": "stdout",
    "data": "a"
  },
  {
    "type": "stdout",
    "data": "r"
  },
  {
    "type": "stdout",
    "data": "y"
  },
  {
    "type": "stdout",
    "data": "-"
  },
  {
    "type": "stdout",
    "data": "l"
  },
  {
    "type": "stdout",
    "data": "o"
  },
  {
    "type": "stdout",
    "data": "a"
  },
  {
    "type": "stdout",
    "data": "d"
  },
  {
    "type": "stdout",
    "data": "e"
  },
  {
    "type": "stdout",
    "data": "d"
  },
  {
    "type": "stdout",
    "data": ","
  },
  {
    "type": "stdout",
    "data": "i"
  },
  {
    "type": "stdout",
    "data": "d=\"/usr/lib/coreutils/libstdbuf.so\",target-name=\"/usr/lib/coreutils/libstdbuf.so\",host-name=\"/usr/lib/coreutils/libstdbuf.so\",symbols-loaded=\"0\",thread-group=\"i1\"\n=library-loaded,id=\"/usr/lib/libc.so.6\",target-name=\"/usr/"
  },
  {
    "type": "stdout",
    "data": "lib/libc.so.6\",host-name=\"/usr/lib/libc.so.6\",symbols-loaded=\"0\",thread-group=\"i1\"\n"
  },
  {
    "type": "stdout",
    "data": "=breakpoint-modified,bkpt={number=\"1\","
  },
  {
    "type": "stdout",
    "data": "type=\"breakpoint\",disp=\"keep\",enabled=\"y\",addr=\"0x000000000040062e\",func=\"main\",file"
  },
  {
    "type": "stdout",
    "data": "=\"guess.c\",fullname=\"/home/alex/Proj"
  },
  {
    "type": "stdout",
    "data": "ects/react-gdb/demo/examples/gue"
  },
  {
    "type": "stdout",
    "data": "ss-game/guess.c\",line=\"6\",thread-grou"
  },
  {
    "type": "stdout",
    "data": "ps=[\"i1\"],times=\"1\",original-lo"
  },
  {
    "type": "stdout",
    "data": "cation=\"main\"}\n"
  },
  {
    "type": "stdout",
    "data": "~\"\\n\"\n"
  },
  {
    "type": "stdout",
    "data": "~\"Breakpoint 1, main () at gu"
  },
  {
    "type": "stdout",
    "data": "ess.c:6\\n\"\n&\"warning: "
  },
  {
    "type": "stdout",
    "data": "Source file is more recent than exec"
  },
  {
    "type": "stdout",
    "data": "utable.\\n\"\n~\"6\\t  int r"
  },
  {
    "type": "stdout",
    "data": "andom_num = 0;\\n\"\n*stopped,reason=\"breakpoint-hit\",disp=\"keep\",bkptno=\"1\",frame={addr=\"0x000000000040062e\",func=\"main\",args=[],file=\"guess.c\",fullname=\"/home/alex/Projects/react-gdb/demo/examples/guess-game/guess.c\",line=\"6\"},thread-id=\"1\",stopped-threads=\"all\",core=\"0\"\n"
  },
  {
    "type": "stdout",
    "data": "(gdb) \n"
  },
  {
    "type": "stdin",
    "data": "-exec-continue\n"
  },
  {
    "type": "stdout",
    "data": "^running\n*running,thread-id=\"all\"\n(gdb) \n"
  },
  {
    "type": "stdout",
    "data": "Guess my number! "
  },
  {
    "type": "stdin",
    "data": "1\n"
  },
  {
    "type": "stdout",
    "data": "Your guess is too low. Guess again. "
  },
  {
    "type": "stdin",
    "data": "2\n"
  },
  {
    "type": "stdout",
    "data": "Your guess is too low. Guess again. "
  },
  {
    "type": "stdin",
    "data": "3\n"
  },
  {
    "type": "stdout",
    "data": "Your guess is too low. Guess again. "
  },
  {
    "type": "stdin",
    "data": "4\n"
  },
  {
    "type": "stdout",
    "data": "Your guess is too low. Guess again. "
  },
  {
    "type": "stdin",
    "data": "5\n"
  },
  {
    "type": "stdout",
    "data": "Your guess is too low. Guess again. "
  },
  {
    "type": "stdin",
    "data": "6\n"
  },
  {
    "type": "stdout",
    "data": "Your guess is too low. Guess again. "
  },
  {
    "type": "stdin",
    "data": "7\n"
  },
  {
    "type": "stdout",
    "data": "Your guess is too low. Guess again. "
  },
  {
    "type": "stdin",
    "data": "8\n"
  },
  {
    "type": "stdout",
    "data": "You guessed correctly in 8 tries! Congratulations!\n"
  },
  {
    "type": "stdout",
    "data": "~\"[Inferior"
  },
  {
    "type": "stdout",
    "data": " 1 (process 1606) exited norma"
  },
  {
    "type": "stdout",
    "data": "lly]\\n\"\n=thread-exited,id=\""
  },
  {
    "type": "stdout",
    "data": "1\",group-id=\"i1\"\n"
  },
  {
    "type": "stdout",
    "data": "=thread-group-ex"
  },
  {
    "type": "stdout",
    "data": "ited,id=\"i1\",exit-code=\"0"
  },
  {
    "type": "stdout",
    "data": "\"\n"
  },
  {
    "type": "stdout",
    "data": "*stopped,reason=\"exited-normally\"\n(gdb) \n"
  },
  {
    "type": "stdin",
    "data": "-gdb-exit\n"
  },
  {
    "type": "stdout",
    "data": "^exit\n"
  }
]